# aws_add_extension_nodes

# This playbook is used to deploy the AoC Self-managed AWS environment from source.
#
# Input variables:
# aws_foundation_stack_name: ""                 # Name of CloudFormation AAP foundation stack
# aws_region: ""                                # Name of AWS region
# aws_offer_type:                               # Must be 100, 200, or 400. Must be the same as extension node offer type
# aws_launch_template_name: ""                  # The name of the AWS EC2 launch template to create
# aws_autoscaling_group_name: ""                # The name of the AWS AutoScaling Group to create for the extension nodes
# aws_asg_min_size: 3                           # The AutoScaling Group minimum capacity. (Max is set by offer_type)
# aws_asg_desired_capacity: 3                   # The AutoScaling Group desired capacity.

---

- name: AWS deploy extension nodes
  hosts: localhost
  connection: local
  remote_user: awx
  vars:

  tasks:
    - name: Check Operations images and Ansible on Cloud deployment versions
      ansible.builtin.include_role:
        name: redhat.ansible_on_clouds.helpers.standalone_check_aoc_version
        apply:
          vars:
            ansible_connection: "aws_ssm"
            ansible_aws_ssm_bucket_name: "{{ aws_ssm_bucket_name }}"
            ansible_aws_ssm_region: "{{ aws_region }}"
            ansible_aws_ssm_s3_addressing_style: "virtual"
            ansible_python_interpreter: /usr/bin/python3
            hubs: "{{ groups['aap_hubs'] }}"
            filesystem: "/efs"

    - name: "Load 'auth' task file"
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/../roles/standalone_aws_core_dev/tasks/auth.yaml"

    - name: "Run Deploy Extension Nodes Role"
      ansible.builtin.include_role:
        name: redhat.ansible_on_clouds.standalone_aws_deploy_extension_nodes

---

- name: Delete external load balancers for existing Ansible Automation Platform on Google Cloud Platform deployment
  hosts: localhost
  connection: local
  remote_user: awx

  vars:
    gcp_service_account_credentials_json_path: ./path/to/credentials.json
    gcp_compute_region: "us-east1"
    gcp_compute_zone: "us-east1-b"
    gcp_project_id: "{{ (lookup('file', gcp_service_account_credentials_json_path) | from_json).project_id }}"


  tasks:
    - name: Check Operations images and Ansible on Cloud deployment versions
      ansible.builtin.include_role:
        name: redhat.ansible_on_clouds.helpers.standalone_check_aoc_version
        apply:
          vars:
            ansible_connection: redhat.ansible_on_clouds.gcp_ssh
            hubs: "{{ groups['aap_hubs'] }}"
            filesystem: "/aap"

    - name: "Load 'gcloud_auth' task file"
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/../roles/standalone_gcp_core_dev/tasks/auth.yaml"
        
    - name: Check for existing deployment {{ gcp_deployment_name }}
      environment:
        # Set environment variables
        CLOUDSDK_CORE_ACCOUNT: "{{ (lookup('file', gcp_service_account_credentials_json_path) | from_json).client_email }}"
        CLOUDSDK_CORE_PROJECT: "{{ (lookup('file', gcp_service_account_credentials_json_path) | from_json).project_id }}"
        CLOUDSDK_COMPUTE_REGION: "{{ gcp_compute_region }}"
        CLOUDSDK_COMPUTE_ZONE: "{{ gcp_compute_zone }}"

      block:
        - name: Get deployments list
          ansible.builtin.command:
            cmd: "gcloud deployment-manager deployments list --format='table[no-heading](name)'"
          register: deployment_list
          changed_when: false

        - name: Check if deployment exists
          set_fact:
            deployment_exist: "{{ gcp_deployment_name in deployment_list.stdout_lines }}"

        - name: debug deployment_exist
          ansible.builtin.debug:
            msg:
              - "Deployment exist: {{ deployment_exist }}"
              - "Deployment list: {{ deployment_list.stdout_lines }}"

        - name: Deleting forwarding-rules for controller
          ansible.builtin.command:
            cmd: "gcloud compute forwarding-rules delete {{ gcp_deployment_name }}-aap-cntrlr-ext-lb-http-fwd-rule2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting target-http-proxies for controller
          ansible.builtin.command:
            cmd: "gcloud compute target-http-proxies delete {{ gcp_deployment_name }}-aap-cntrlr-ext-lb-tgt-http-prxy2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting url-maps for controller
          ansible.builtin.command:
            cmd: "gcloud compute url-maps delete {{ gcp_deployment_name }}-aap-cntrlr-ext-lb2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting backend-services for controller
          ansible.builtin.command:
            cmd: "gcloud compute backend-services delete {{ gcp_deployment_name }}-aap-cntrlr-ext-lb-bknd-srv2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting health-checks for controller
          ansible.builtin.command:
            cmd: "gcloud compute health-checks delete {{ gcp_deployment_name }}-aap-cntrlr-ext-lb-hc2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting external IP address for controller
          ansible.builtin.command:
            cmd: "gcloud compute addresses delete {{ gcp_deployment_name }}-aap-cntrlr-ext-lb-ip2 --region={{ gcp_compute_region }} --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting forwarding-rules for hub
          ansible.builtin.command:
            cmd: "gcloud compute forwarding-rules delete {{ gcp_deployment_name }}-aap-hub-ext-lb-http-fwd-rule2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting target-http-proxies for hub
          ansible.builtin.command:
            cmd: "gcloud compute target-http-proxies delete {{ gcp_deployment_name }}-aap-hub-ext-lb-tgt-http-prxy2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting url-maps for hub
          ansible.builtin.command:
            cmd: "gcloud compute url-maps delete {{ gcp_deployment_name }}-aap-hub-ext-lb2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting backend-services for hub
          ansible.builtin.command:
            cmd: "gcloud compute backend-services delete {{ gcp_deployment_name }}-aap-hub-ext-lb-bknd-srv2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting health-checks for hub
          ansible.builtin.command:
            cmd: "gcloud compute health-checks delete {{ gcp_deployment_name }}-aap-hub-ext-lb-hc2 --region={{ gcp_compute_region }}  --project={{ gcp_project_id }} --quiet"
          ignore_errors: true

        - name: Deleting external IP address for hub
          ansible.builtin.command:
            cmd: "gcloud compute addresses delete {{ gcp_deployment_name }}-aap-hub-ext-lb-ip2 --region={{ gcp_compute_region }} --project={{ gcp_project_id }} --quiet"
          ignore_errors: true          
